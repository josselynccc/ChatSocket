<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="styles.css">

</head>
<body>
    <img src="colores.png" alt="">
    <h1>CHAT USANDO SOCKET</h1>
    <div id="chat">
        <input type="text" id="username" placeholder="Ingrese su nombre de usuario">
        <div id="messages">
        </div>
        <div id="writing"></div>
        <textarea name="" id="write-message" cols="10" rows="5"></textarea>

    </div>

    <!-- Permitira emitir los eventos -->
    <script src="/socket.io/socket.io.js"></script>

    <!-- vamos a poder emitir el evento de llamada al servidor -->
    <script>
        const socket = io()
        const username = document.getElementById('username')
        const writeMessage = document.getElementById('write-message')
        const writing = document.getElementById('writing')
        const messages = document.getElementById('messages')

        //detectar el evento creado en socket.io
        socket.on('all-message', (m)=>{
            let content = ''
            for(const message of m){
                content+= `
                    <div id="message">
                        ${message.username} : ${message.message}
                    </div> <br>
                `
            }
            messages.innerHTML = content
            messages.scrollTo = messages.scrollHeight
        })

        //detectar cuando un usuario esta escribiendo
        writeMessage.addEventListener('keydown', (e)=>{
            socket.emit('writing', username.value)
        })

        socket.on('wrinting', (username)=>{
            writing.innerHTML = username + " estÃ¡ esribiendo"
            setTimeout(()=>{
                writing.innerHTML = ''
            }, 3000)
        })

        writeMessage.addEventListener('keyup', (event) =>{
            if(event.code == "Enter"){
                if (username.value == "" || writeMessage.value == ""){
                    return alert('Elusuario y el mensaje son requeridos')
                }

                socket.emit('new-message',{username : username.value, message : writeMessage.value.slice(0,-1)})
                writeMessage.value = ""
            }
        })
    </script>
    <!--  -->
</body>
</html>